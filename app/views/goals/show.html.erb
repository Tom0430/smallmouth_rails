<body>
    <hr>
    <%= "チャレンジ" %>
    <%= "「" + @goal.title + "」" %>
    <hr>
    <%= "チャレンジ詳細"%>
    <%= @goal.detail %>
    <hr>
    <%= "チーズ合計獲得数 " + @goal.rates.sum(:quantity).to_s + "個" %>
    <hr>
    <%= "投稿者 " + @goal.user.name + "さん" %>
    <hr>

    <%# カウントダウンタイマー表示 時間経過,結果を選択後表示の切り替え %>
    <% if @goal.status == "trying" && @goal.user.id == current_user.id %>
        <p id ="timer-text">あと<span id = "timer"></span>でチャレンジ終了！</p>
        <div><%= link_to "達成できた", achieved_user_goal_path(@goal.user.id,@goal.id) %></div>
        <div><%= link_to "達成できなかった", failed_user_goal_path(@goal.user.id,@goal.id) %></div>
    <% else %>
        <%= "このチャレンジは終了しました" %>
    <% end %>
    <%# チーズの画像で評価機能 %>
    <% if user_signed_in? && current_user.id != @goal.user.id %>
        <%= image_tag("unclicked.png", :id => "black", :size =>'30x30')%>
            <span>== 素晴らしいチャレンジにチーズをあげよう！ ==></span>
        <%= image_tag("clicked.png", :id => "yellow", :size =>'30x30')%><br>

        <% if @goal.rated_by?(current_user) %>
            <%= "あなたはこのチャレンジに" + @rate.quantity.to_s + "個のチーズをあげています。" %><br>
            <%= "個数を変更するならもう一度チーズの個数を選択してください。" %>
        <% end %>
        <%= form_with(model: [current_user,@goal,@rate], remote: true, url: user_goal_rate_path(current_user.id,@goal.id)) do |f| %>
            <%# チーズの画像を繰り返し表示 %>
            <span class = "ratebox" >
                <% 10.times do |index| %>
                    <% if @rate.quantity && @rate.quantity >= index+1 %>
                        <%= image_tag("clicked.png", :data => { :cheese_index => index + 1 }, :class => "blacks", :size =>'60x60') %>
                    <% else %>
                        <%= image_tag("unclicked.png", :data => { :cheese_index => index + 1 }, :class => "blacks", :size =>'60x60') %>
                    <% end %>
                <% end %>
            </span>
            <!-- hidden_fieldで評価を持つテーブルのカラム用意。jsで値を埋め込むのでidを付与、評価後にsubmitを押す処理　-->
            <%= f.hidden_field :user_id, :value => current_user.id %>
            <%= f.hidden_field :goal_id, :value => @goal.id %>
            <%= f.hidden_field :quantity, :value => -1, :id => "ratequantity" %>
            <%= f.submit "送信", id:"ratesubmit", :style => "display: none;" %>
        <% end %>
    <% end %>
    <%# チーズの画像で評価機能 ここまで %>
    <hr>
    <%# チャレンジの過程投稿機能%>
    <%if @goal.user.id == current_user.id %>
        <p>チャレンジの記録を残そう!</p>
        <%= form_for [@user, @goal, @progress],url: user_goal_progress_path(current_user.id,@goal.id) do |f| %>
            <%= f.text_area :body, rows:'5', class: "form-control",placeholder: "チャレンジの過程をここに" %>
            <%= f.label :"頑張った瞬間の写真を投稿しちゃおう！"%>
            <%= f.file_field :progress_image %>
            <%= f.submit "送信する", class: "challege-submit btn-lg btn-base-1 mt-20 pull-right" %>
        <% end %>
    <% end %>
    <hr>
    <%# 過程表示 %>
    <% if @goal.progresses.present? %>
        <p>チャレンジ達成までの道のり</p>
        <% @goal.progresses.each do |progress| %>
            <% if progress.progress_image? %>
                <%= image_tag progress.progress_image.url %>
            <% end %>
            <%= progress.body %>
            <%= progress.created_at.strftime("%Y-%m-%d %H:%M:%S") %>
        <% end %>
        <hr>
    <% end %>
    <%# コメント表示 %>
    <% @goal.comments.each do |comment| %>
        <%= comment.user.name + "さん" %>
        <%= comment.body %>
        <%= comment.created_at.strftime("%Y-%m-%d %H:%M:%S") %>
        <hr>
    <% end %>
    <%# コメント投稿 %>
    <%= form_for [current_user, @goal, @comment],url:user_goal_comment_path(current_user.id,@goal.id) do |f| %>
        <%= f.text_area :body, rows:'5', class: "form-control",placeholder: "コメントをここに" %>
        <%= f.submit "送信する", class: "comment-submit btn-lg btn-base-1 mt-20 pull-right" %>
    <% end %>
</body>


<script>
    // カウントダウンタイマー
    var limit = new Date("<%= @goal.remaining_time %>");
    var countdown = function(limit_due) {
        var now = new Date();
        var rest = limit_due.getTime() - now.getTime();
        var sec = Math.floor(rest / 1000 % 60);
        var min = Math.floor(rest / 1000 / 60) % 60;
        var hours = Math.floor(rest / 1000 / 60 / 60) % 24;
        var days = Math.floor(rest/ 1000 / 60 / 60 / 24 )
        var count_hash = {days: days, hours: hours, min: min, sec: sec}
        return count_hash;
    }
    var recale = function() {
        var counter = countdown(limit);
        if(counter["days"] <= 0 && counter["hours"] <= 0 && counter["min"] <= 0 && counter["sec"] <= 0){
            document.getElementById('timer-text').textContent = "チャレンジ終了！達成できましたか？";
            return
        }
        else{
            one_second_recale_refresh();
        }
        var time = counter["days"] + '日' + counter["hours"] + '時間' + counter["min"] + '分' + counter["sec"] + '秒';
        document.getElementById('timer').textContent = time;
    }

    var one_second_recale_refresh = function() {
        setTimeout(recale, 1000)
    }
    recale();
</script>

<script type="text/javascript">
    //チーズの画像で評価機能
    $(".blacks").click(function(){
        // 黄色いチーズ、黒いチーズの元画像を指定
        const blackSrc = $("#black")[0].currentSrc
        const yellowSrc = $("#yellow")[0].currentSrc
        //選択した個数 = 黄色くする最後のチーズの番号にする
        let lastYellow = -1

        // 選択した個数以下の番号のチーズを黄色に、大きいものを黒に切り替える
        const index = $(this).data("cheeseIndex")
        if(index > lastYellow ){
            for(let i = 1; i <= index; i++){
                $(`.ratebox img[data-cheese-index=${i}]`).attr('src', yellowSrc);
            }
        }else{
            for(let i = index + 1; i <= 10 ; i++){
                $(`.ratebox img[data-cheese-index=${i}]`).attr('src', blackSrc);
            }
        };
        lastYellow = index
        // hidden_fieldのclassを読み込んで、そこにlastYellowを代入　選択した個数をdbに送る
        $("#ratequantity")[0].value = lastYellow
        // form_withのsubmit(についてるclassを取得)ボタンをおす記述。
        document.getElementById("ratesubmit").click();
    });
</script>