<hr>
<%= "チャレンジ" %>
<%= "「" + @goal.title + "」" %>
<hr>
<%= "チャレンジ詳細"%>
<%= @goal.detail %>
<hr>
<%= "投稿者 " + @goal.user.name + "さん" %>
<hr>
<%= "このチャレンジは" + @goal.status_i18n %>
<% if @goal.rates.sum(:quantity) > 0 %>
    <%= "チーズ合計獲得数 " + @goal.rates.sum(:quantity).to_s + "個" %>
<% end %>
<hr>
<%= "期間 " + @goal.limit_time_i18n %>
<hr>

<%# チャレンジの公開、非公開の表示 %>
<% if user_signed_in? && current_user.id == @goal.user.id %>
    <% if @goal.published == true %>
        <%= "このチャレンジは公開中です" %>
    <% else @goal.published == false %>
        <%= "このチャレンジは非公開です。非公開中のチャレンジの獲得チーズ数はランキングにカウントされません" %>
    <% end %>
    <%# チャレンジの公開、非公開を切り替える処理 %>
    <%= form_for @goal, url: user_goal_path(current_user, @goal),method: "patch" do  |f| %>
        <% if @goal.published == true %>
            <%= f.hidden_field :published, :value => 0 %>
            <%= f.submit "このチャレンジを非公開にする", class: "btn-lg btn-base-1 mt-20 pull-right" %>
        <% else %>
            <%= f.hidden_field :published, :value => 1 %>
            <%= f.submit "このチャレンジを公開する", class: "btn-lg btn-base-1 mt-20 pull-right" %>
        <% end %>
    <% end %>
    <hr>
<% end %>

<%# カウントダウンタイマー表示 時間経過,結果を選択後表示の切り替え %>
<% if user_signed_in? && @goal.status == "trying" && @goal.user.id == current_user.id %>
    <p id ="timer-text">あと<span id = "timer"></span>でチャレンジ終了！</p>
    <div><%= link_to "達成できた", achieved_user_goal_path(@goal.user, @goal) %></div>
    <div><%= link_to "達成できなかった", failed_user_goal_path(@goal.user, @goal) %></div>
<% elsif user_signed_in? && @goal.status != "trying" && @goal.user.id == current_user.id  %>
    <%= "このチャレンジは終了しました" %>
<% end %>

<%# チーズの画像で評価機能 %>
<%# 投稿者以外のログイン済ユーザーが評価できるように設定 %>
<% if user_signed_in? && current_user.id != @goal.user.id && @goal.status == "achieved" %>
    <%= image_tag("unclicked.png", :id => "black", :size =>'30x30')%>
        <span>== 素晴らしいチャレンジにチーズをあげよう！ ==></span>
    <%= image_tag("clicked.png", :id => "yellow", :size =>'30x30')%><br>
    <%# すでに評価しているなら評価数を表示 %>
    <% if @goal.rated_by?(current_user) %>
        <%= "あなたはこのチャレンジに" + @rate.quantity.to_s + "個のチーズをあげています。" %><br>
        <%= "個数を変更するならもう一度チーズの個数を選択してください。" %>
    <% end %>
    <% method_type = @rate.blank? ? "post" : "patch" %>
    <%= form_with(model: [current_user,@goal,@rate], remote: true, url: user_goal_rate_path(current_user.id,@goal.id), method: :"#{method_type}") do |f| %>
        <%# チーズの画像を繰り返し表示 期間に合わせて表示しておく個数 = 評価の最大数を変える %>
        <span class = "ratebox" >
        <% case @goal.limit_time %>
        <% when "limit1m" then %>
            <% cheese_repeat = 2 %>
        <% when "limit8h" then %>
            <% cheese_repeat = 4 %>
        <% when "limit1d" then %>
            <% cheese_repeat = 6 %>
        <% when "limit3d" then %>
            <% cheese_repeat = 8 %>
        <% else %>
            <% cheese_repeat = 10 %>
        <% end %>
            <% cheese_repeat.times do |index| %>
                <% if @rate.quantity && @rate.quantity >= index+1 %>
                    <%= image_tag("clicked.png", :data => { :cheese_index => index + 1 }, :class => "blacks", :size =>'60x60') %>
                <% else %>
                    <%= image_tag("unclicked.png", :data => { :cheese_index => index + 1 }, :class => "blacks", :size =>'60x60') %>
                <% end %>
            <% end %>
        </span>
        <!-- hidden_fieldで評価を持つテーブルのカラム用意。jsで値を埋め込むのでidを付与、評価後にsubmitを押す処理 -->
        <%= f.hidden_field :user_id, :value => current_user.id %>
        <%= f.hidden_field :goal_id, :value => @goal.id %>
        <%= f.hidden_field :quantity, :value => -1, :id => "ratequantity" %>
        <%= f.submit "送信", id:"ratesubmit", :style => "display: none;" %>
    <% end %>
<hr>
<% end %>
<%# チーズの画像で評価機能 ここまで %>

<%# チャレンジの過程投稿欄 %>
<%if user_signed_in? && @goal.user.id == current_user.id %>
    <p>チャレンジの記録を残そう!</p>
    <%= form_for [@user, @goal, @progress],url: user_goal_progresses_path(current_user, @goal) do |f| %>
        <%= f.text_area :body, rows:'5', class: "form-control",placeholder: "チャレンジの過程をここに" %>
        <%= f.label :"頑張った瞬間の写真を投稿しちゃおう！"%>
        <%= f.file_field :progress_image %>
        <%= f.submit "送信する", class: "challege-submit btn-lg btn-base-1 mt-20 pull-right" %>
        <hr>
    <% end %>
<% end %>

<%# チャレンジ過程表示 %>
<div class="progress-wrapper">
    <% if @goal.progresses.present? %>
        <p>チャレンジ達成までの道のり</p>
        <hr>
        <% @goal.progresses.each do |progress| %>
            <% if progress.progress_image? %>
                <%= image_tag progress.progress_image.url %>
            <% end %>
            <%= progress.body %>
            <%= progress.created_at.strftime("%Y-%m-%d %H:%M:%S") %>
            <% if user_signed_in? && current_user.admin? %>
                <%= link_to "delete", user_goal_progress_path(@goal.user, @goal, progress), method: :delete,data: { confirm: "本当に削除しますか?" } %>
            <% end %>
            <hr>
        <% end %>
    <% end %>
</div>

<%# コメント表示 %>
<div class="comment-wrapper">
    <p>コメント</p>
    <hr>
    <% @goal.comments.each do |comment| %>
        <%= comment.body %>
        <%= link_to user_path(comment.user.id) do %>
            <%= comment.user.name + "さん" %>
        <% end %>
        <%= comment.created_at.strftime("%Y-%m-%d %H:%M:%S") %>
        <% if user_signed_in? && current_user.admin? %>
            <%= link_to "delete", user_goal_comment_path(comment.user, @goal, comment), method: :delete,data: { confirm: "本当に削除しますか?" } %>
        <% end %>
        <hr>
    <% end %>
</div>

<%# コメント投稿欄 %>
<% if user_signed_in? %>
    <%= form_for [current_user , @goal, @comment],url:user_goal_comments_path(current_user, @goal) do |f| %>
        <%= f.text_area :body, rows:'5', class: "form-control",placeholder: "コメントをここに" %>
        <%= f.submit "送信する", class: "comment-submit btn-lg btn-base-1 mt-20 pull-right" %>
    <% end %>
<% end %>

<script>
    // カウントダウンタイマー
    var limit = new Date("<%= @goal.remaining_time %>");
    var countdown = function(limit_due) {
        var now = new Date();
        var rest = limit_due.getTime() - now.getTime();
        var sec = Math.floor(rest / 1000 % 60);
        var min = Math.floor(rest / 1000 / 60) % 60;
        var hours = Math.floor(rest / 1000 / 60 / 60) % 24;
        var days = Math.floor(rest/ 1000 / 60 / 60 / 24 )
        var count_hash = {days: days, hours: hours, min: min, sec: sec}
        return count_hash;
    }
    var recale = function() {
        var counter = countdown(limit);
        if(counter["days"] <= 0 && counter["hours"] <= 0 && counter["min"] <= 0 && counter["sec"] <= 0){
            document.getElementById('timer-text').textContent = "チャレンジ終了！達成できましたか？";
            return
        }
        else{
            one_second_recale_refresh();
        }
        var time = counter["days"] + '日' + counter["hours"] + '時間' + counter["min"] + '分' + counter["sec"] + '秒';
        document.getElementById('timer').textContent = time;
    }

    var one_second_recale_refresh = function() {
        setTimeout(recale, 1000)
    }
    recale();
</script>

<script type="text/javascript">
    //チーズの画像で評価機能
    $(".blacks").click(function(){
        // 黄色いチーズ、黒いチーズの元画像を指定
        const blackSrc = $("#black")[0].currentSrc
        const yellowSrc = $("#yellow")[0].currentSrc
        //選択した個数 = 黄色くする最後のチーズの番号にする
        let lastYellow = -1

        // 選択した個数以下の番号のチーズを黄色のチーズの画像に、大きいものを黒のチーズの画像に切り替える
        const index = $(this).data("cheeseIndex")
        if(index > lastYellow ){
            for(let i = 1; i <= index; i++){
                $(`.ratebox img[data-cheese-index=${i}]`).attr('src', yellowSrc);
            }
        }else{
            for(let i = index + 1; i <= 10 ; i++){
                $(`.ratebox img[data-cheese-index=${i}]`).attr('src', blackSrc);
            }
        };
        lastYellow = index
        // hidden_fieldのclassを読み込んで、そこにlastYellowを代入、選択した個数をrails側に送る
        $("#ratequantity")[0].value = lastYellow
        // form_withのsubmitのclassを取得してボタンをおす記述
        document.getElementById("ratesubmit").click();
    });
</script>
