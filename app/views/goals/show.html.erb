<body>
<%= @goal.title %>
<%= @goal.detail %>

<section><p id ="timer-text">あと<span id = "timer"></span>でチャレンジ終了！</p></section>

<div><%= link_to "達成できた", goal_achieved_path(@goal.id) %></div>
<div class="failed-text"><%= link_to "達成できなかった", goal_failed_path(@goal.id) %></div>

<%= link_to"新", new_goal_path %>

</body>


<script>
    // カウントダウンタイマー
    var limit = new Date("<%= @goal.remaining_time %>");
    var countdown = function(limit_due) {
        var now = new Date();
        // modelの値(不変) - 今の時刻(どんどん増えてく。ブラウザの更新によらない)
        var rest = limit_due.getTime() - now.getTime();
        var sec = Math.floor(rest / 1000 % 60);
        var min = Math.floor(rest / 1000 / 60) % 60;
        var hours = Math.floor(rest / 1000 / 60 / 60) % 24;
        var days = Math.floor(rest/ 1000 / 60 / 60 / 24 )
        var count_hash = {days: days, hours: hours, min: min, sec: sec}

        return count_hash;
    }

    //var failed_text = document.getElementsById("aaa");
    var failed_text = document.getElementsByClassName("failed-text");
    var recale = function() {
        var counter = countdown(limit);
        if(counter["days"] <= 0 && counter["hours"] <= 0 && counter["min"] <= 0 && counter["sec"] <= 0){
            document.getElementById('timer-text').textContent = "チャレンジ終了！達成できましたか？";
            failed_text[0].style.display = "block";
            return
        }
        else{
            one_second_recale_refresh();
        }
        var time = counter["days"] + '日' + counter["hours"] + '時間' + counter["min"] + '分' + counter["sec"] + '秒';
        document.getElementById('timer').textContent = time;
    }

    var one_second_recale_refresh = function() {
        setTimeout(recale, 1000)
    }

    recale();

</script>